import asyncio
import os
import sys
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
API_TOKEN = os.getenv("BOT_TOKEN")

if not API_TOKEN:
    print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    print("üí° –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é BOT_TOKEN –≤ Railway Variables")
    sys.exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer("üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ Railway!\n\n"
                        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")

@dp.message(Command("help"))
async def help_command(message: Message):
    await message.answer("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
                        "/help - –ü–æ–º–æ—â—å\n"
                        "/info - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")

@dp.message(Command("info"))
async def info_command(message: Message):
    await message.answer("ü§ñ –≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞:\n"
                        "‚Ä¢ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: Railway\n"
                        "‚Ä¢ –§—Ä–µ–π–º–≤–æ—Ä–∫: aiogram 3.x\n"
                        "‚Ä¢ –Ø–∑—ã–∫: Python 3.11+")

async def main():
    print("‚úÖ BOT_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    try:
        await dp.start_polling(bot)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")